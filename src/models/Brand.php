<?php

namespace engadvisor\sdk\models;

use Yii;

/**
 * This is the model class for table "brand".
 *
 * @property int $id
 * @property string $name
 * @property string $slug
 * @property string $logo
 * @property int $owner_id
 * @property string $media_folder
 * @property string $long_description
 * @property bool $status
 * @property bool $moderation_status
 *
 * @property Branch[] $branches
 */
class Brand extends \yii\db\ActiveRecord
{
    public $fileLogo;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'brand';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'slug'], 'required'],
            [['name', 'slug', 'logo'], 'string', 'max' => 255],
            ['fileLogo', 'file'],
            [['owner_id'], 'integer'],
            [['media_folder'], 'string'],
            [['long_description'], 'string'],
            [['status'], 'boolean'],
            [['moderation_status'], 'boolean'],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Название',
            'title' => 'Тайтл',
            'slug' => 'Slug (URL)',
            'logo' => 'Логотип'
        ];
    }

    /**
     * Gets query for [[Branches]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getBranches()
    {
        return $this->hasMany(Branch::class, ['id' => 'branch_id'])->viaTable('brand_branch', ['brand_id' => 'id']);
    }

    public function getUsers()
    {
        return $this->hasMany(User::class, ['id' => 'user_id'])->viaTable('user_brand', ['brand_id' => 'id']);
    }


    public function upload()
    {
        if ($this->validate()) {
            $this->fileLogo->saveAs('@frontend/web/media/' . $this->fileLogo->baseName . '.' . $this->fileLogo->extension);
            return true;
        } else {
            return false;
        }
    }

    public function beforeSave($insert)
    {
        $this->owner_id = \Yii::$app->user->getId();
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
